!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/parallels/src/gitrepo/personal/k3d-manager/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
AGENTS.md	AGENTS.md	/^# AGENTS.md$/;"	c
Automatic installation workflow	README.md	/^### Automatic installation workflow$/;"	S	section:k3d-manager""Using k3s clusters
Changes - k3d-manager: dated 2024-06-26	CHANGE.md	/^# Changes - k3d-manager: dated 2024-06-26$/;"	c
Codex Workspace Sync over SSH (TL;DR)	AGENTS.md	/^## Codex Workspace Sync over SSH (TL;DR)$/;"	s	chapter:AGENTS.md
Colima resource configuration (macOS)	README.md	/^### Colima resource configuration (macOS)$/;"	S	section:k3d-manager""k3s backend (bare-metal installations)
Configuration knobs	README.md	/^### Configuration knobs$/;"	S	section:k3d-manager""Vault PKI setup
Container runtime ports	README.md	/^### Container runtime ports$/;"	S	section:k3d-manager""k3s backend (bare-metal installations)
Directory layout	README.md	/^## Directory layout$/;"	s	chapter:k3d-manager
Disconnected clusters and preloaded charts	README.md	/^#### Disconnected clusters and preloaded charts$/;"	t	subsection:k3d-manager""Vault PKI setup""Jenkins deployment prerequisites
EOF	scratch/debug-vault-pvc.sh	/^cat <<'EOF' | kubectl apply -f -$/;"	h
EOF	scratch/debug-vault-pvc.sh	/^cat <<EOF | kubectl -n "$NS" apply -f -$/;"	h
EOF	scripts/etc/jenkins/cert-rotator.sh	/^   cat >"$tmpfile" <<EOF$/;"	h
EOF	scripts/lib/core.sh	/^      cat <<'EOF'$/;"	h
EOF	scripts/lib/help/utils.sh	/^    cat <<EOF$/;"	h
EOF	scripts/lib/test.sh	/^    _kubectl apply -f - -n istio-test <<EOF$/;"	h
EOF	scripts/lib/test.sh	/^  cat <<EOF | _kubectl apply -f -$/;"	h
EOF	scripts/plugins/azure.sh	/^    cat <<'EOF'$/;"	h
EOF	scripts/plugins/bitwarden.sh	/^  cat <<EOF | _kubectl apply -f -$/;"	h
EOF	scripts/plugins/jenkins.sh	/^         _err <<-EOF$/;"	h
EOF	scripts/plugins/vault.sh	/^   cat <<EOF$/;"	h
Example workflow	README.md	/^### Example workflow$/;"	S	section:k3d-manager""Vault PKI setup
HCL	scripts/plugins/jenkins.sh	/^         vault policy write jenkins-jcasc-read <<'HCL'$/;"	h
HCL	scripts/plugins/jenkins.sh	/^         vault policy write jenkins-jcasc-write <<'HCL'$/;"	h
HCL	scripts/plugins/jenkins.sh	/^      cat <<HCL | _kubectl -n "$vault_namespace" exec -i "$pod" -- \\$/;"	h
HCL	scripts/plugins/jenkins.sh	/^   cat <<'HCL' | tee jenkins-admin.hcl | _kubectl -n "$vault_namespace" exec -i "$pod" -- \\$/;"	h
HCL	scripts/plugins/vault.sh	/^  cat <<'HCL' | _kubectl -n "$ns" exec -i "$pod" -- \\$/;"	h
HCL	scripts/plugins/vault.sh	/^  cat <<'HCL' | _kubectl -n "$ns" exec -i "$pod" -- sh - \\$/;"	h
HCL	scripts/plugins/vault.sh	/^  cat <<'HCL' | _no_trace _kubectl -n "$ns" exec -i "$pod" -- \\$/;"	h
HELM_EXIT_CODES=	scripts/tests/test_helpers.bash	/^  HELM_EXIT_CODES=()$/;"	f
Host storage paths	README.md	/^### Host storage paths$/;"	S	section:k3d-manager""k3s backend (bare-metal installations)
How it fits together	README.md	/^## How it fits together$/;"	s	chapter:k3d-manager
Jenkins deployment prerequisites	README.md	/^### Jenkins deployment prerequisites$/;"	S	section:k3d-manager""Vault PKI setup
KUBECTL_EXIT_CODES=	scripts/tests/test_helpers.bash	/^  KUBECTL_EXIT_CODES=()$/;"	f
Minimal workflow for existing k3s control planes	README.md	/^### Minimal workflow for existing k3s control planes$/;"	S	section:k3d-manager""Using k3s clusters
PF_PIDS=	scripts/lib/test.sh	/^    PF_PIDS=()$/;"	f
POD	scripts/lib/test.sh	/^  cat <<POD | _kubectl apply -f -$/;"	h
PY	scripts/lib/core.sh	/^   script=$(cat <<'PY'$/;"	h
Prerequisites for the automatic k3s path	README.md	/^### Prerequisites for the automatic k3s path$/;"	S	section:k3d-manager""Using k3s clusters
Public functions	README.md	/^## Public functions$/;"	s	chapter:k3d-manager
REPLACEMENT	scripts/tools/update_ensure_bats.py	/^REPLACEMENT = """function _version_ge() {$/;"	v
RUN_EXIT_CODES=	scripts/tests/test_helpers.bash	/^  RUN_EXIT_CODES=()$/;"	f
Remediation when automatic installation is unavailable	README.md	/^### Remediation when automatic installation is unavailable$/;"	S	section:k3d-manager""Using k3s clusters
Required environment for Jenkins and CLI integrations	README.md	/^### Required environment for Jenkins and CLI integrations$/;"	S	section:k3d-manager""Using k3s clusters
Required services	README.md	/^### Required services$/;"	S	section:k3d-manager""k3s backend (bare-metal installations)
SCRIPT	scripts/plugins/jenkins.sh	/^   cat <<'SCRIPT' | _no_trace _kubectl -n "$vault_namespace" exec -i "$pod" -- sh -$/;"	h
SH	scripts/plugins/vault.sh	/^  cat <<'SH' | _no_trace _kubectl -n "$ns" exec -i "$pod" -- \\$/;"	h
SNIP	scratch/apply-multi-cluster-patch	/^cat > "$snippet" <<'SNIP'$/;"	h
Security notes	README.md	/^## Security notes$/;"	s	chapter:k3d-manager
Setup Script (paste into: Project → Environment → Code execution → Setup scripts)	AGENTS.md	/^## Setup Script (paste into: Project → Environment → Code execution → Setup scripts)$/;"	s	chapter:AGENTS.md
Setup differences compared with k3d	README.md	/^### Setup differences compared with k3d$/;"	S	section:k3d-manager""k3s backend (bare-metal installations)
Tests	README.md	/^## Tests$/;"	s	chapter:k3d-manager
Usage	README.md	/^## Usage$/;"	s	chapter:k3d-manager
Using k3s clusters	README.md	/^## Using k3s clusters$/;"	s	chapter:k3d-manager
Vault PKI setup	README.md	/^## Vault PKI setup$/;"	s	chapter:k3d-manager
Writing a plugin	README.md	/^## Writing a plugin$/;"	s	chapter:k3d-manager
YAML	scripts/plugins/vault.sh	/^            cat <<YAML | _kubectl apply -f -$/;"	h
YAML	scripts/plugins/vault.sh	/^   cat >"$f" <<YAML$/;"	h
_JENKINS_RENDERED_MANIFESTS=	scripts/plugins/jenkins.sh	/^      _JENKINS_RENDERED_MANIFESTS=()$/;"	f
_JENKINS_RENDERED_MANIFESTS=	scripts/plugins/jenkins.sh	/^   _JENKINS_RENDERED_MANIFESTS=()$/;"	f
_JENKINS_RENDERED_MANIFESTS=	scripts/plugins/jenkins.sh	/^declare -a _JENKINS_RENDERED_MANIFESTS=()$/;"	f
___join_lines	scripts/lib/help/utils.sh	/^function ___join_lines() {$/;"	f
__create_cluster	scripts/lib/system.sh	/^function __create_cluster() {$/;"	f
__create_k3d_cluster	scripts/lib/system.sh	/^function __create_k3d_cluster() {$/;"	f
__discover_tests	scripts/lib/help/utils.sh	/^function __discover_tests() {$/;"	f
__escape_regex_literal	scripts/lib/help/utils.sh	/^function __escape_regex_literal() {$/;"	f
__print_test_usage	scripts/lib/help/utils.sh	/^function __print_test_usage() {$/;"	f
__slugify	scripts/lib/help/utils.sh	/^function __slugify() {$/;"	f
__suite_names=	scripts/lib/help/utils.sh	/^    local -a __suite_names=()$/;"	f
__test_names=	scripts/lib/help/utils.sh	/^    local -a __test_names=()$/;"	f
__tests=	scripts/lib/help/utils.sh	/^    local -a __tests=()$/;"	f
_add_exit_trap	scripts/lib/system.sh	/^function _add_exit_trap() {$/;"	f
_apply_clustersecretstore	scripts/plugins/azure.sh	/^function _apply_clustersecretstore() {$/;"	f
_az	scripts/plugins/azure.sh	/^function _az() {$/;"	f
_az_ok	scripts/plugins/azure.sh	/^function _az_ok() {$/;"	f
_bats_meets_requirement	scripts/lib/system.sh	/^function _bats_meets_requirement() {$/;"	f
_bats_version	scripts/lib/system.sh	/^function _bats_version() {$/;"	f
_bw_lookup_secret	scripts/plugins/bitwarden.sh	/^function _bw_lookup_secret(){$/;"	f
_bws	scripts/plugins/bitwarden.sh	/^function _bws() {$/;"	f
_cleanup_eso_test	scripts/lib/test.sh	/^function _cleanup_eso_test() {$/;"	f
_cleanup_istio_test_namespace	scripts/lib/test.sh	/^function _cleanup_istio_test_namespace() {$/;"	f
_cleanup_jenkins_test	scripts/lib/test.sh	/^function _cleanup_jenkins_test() {$/;"	f
_cleanup_on_success	scripts/lib/core.sh	/^function _cleanup_on_success() {$/;"	f
_cleanup_on_success	scripts/tests/test_helpers.bash	/^  _cleanup_on_success() { :; }$/;"	f
_cleanup_register	scripts/lib/system.sh	/^function _cleanup_register() {$/;"	f
_cleanup_trap_command	scripts/lib/core.sh	/^function _cleanup_trap_command() {$/;"	f
_cleanup_vault_test	scripts/lib/test.sh	/^function _cleanup_vault_test() {$/;"	f
_cluster_provider	scripts/lib/core.sh	/^function _cluster_provider() {$/;"	f
_cluster_provider_call	scripts/lib/system.sh	/^function _cluster_provider_call() {$/;"	f
_cluster_provider_get_active	scripts/lib/cluster_provider.sh	/^function _cluster_provider_get_active() {$/;"	f
_cluster_provider_guess_default	scripts/lib/cluster_provider.sh	/^function _cluster_provider_guess_default() {$/;"	f
_cluster_provider_is	scripts/lib/cluster_provider.sh	/^function _cluster_provider_is() {$/;"	f
_cluster_provider_mark_loaded	scripts/lib/system.sh	/^function _cluster_provider_mark_loaded() {$/;"	f
_cluster_provider_module_loaded	scripts/lib/system.sh	/^function _cluster_provider_module_loaded() {$/;"	f
_cluster_provider_module_path	scripts/lib/system.sh	/^function _cluster_provider_module_path() {$/;"	f
_cluster_provider_reset_active	scripts/lib/cluster_provider.sh	/^function _cluster_provider_reset_active() {$/;"	f
_cluster_provider_set_active	scripts/lib/cluster_provider.sh	/^function _cluster_provider_set_active() {$/;"	f
_command_exist	scripts/lib/system.sh	/^function _command_exist() {$/;"	f
_compute_end_iso_macos	scripts/plugins/azure.sh	/^function _compute_end_iso_macos() {$/;"	f
_create_azure_eso_store	scripts/plugins/azure.sh	/^function _create_azure_eso_store() {$/;"	f
_create_client_secret	scripts/plugins/azure.sh	/^function _create_client_secret() {$/;"	f
_create_cluster	scripts/lib/core.sh	/^function _create_cluster() {$/;"	f
_create_jenkins_admin_vault_policy	scripts/plugins/jenkins.sh	/^function _create_jenkins_admin_vault_policy() {$/;"	f
_create_jenkins_cert_rotator_policy	scripts/plugins/jenkins.sh	/^function _create_jenkins_cert_rotator_policy() {$/;"	f
_create_jenkins_namespace	scripts/plugins/jenkins.sh	/^function _create_jenkins_namespace() {$/;"	f
_create_jenkins_pv_pvc	scripts/plugins/jenkins.sh	/^function _create_jenkins_pv_pvc() {$/;"	f
_create_jenkins_vault_ad_policy	scripts/plugins/jenkins.sh	/^function _create_jenkins_vault_ad_policy() {$/;"	f
_create_k3d_cluster	scripts/lib/core.sh	/^function _create_k3d_cluster() {$/;"	f
_create_k3s_cluster	scripts/lib/core.sh	/^function _create_k3s_cluster() {$/;"	f
_create_nfs_share	scripts/lib/core.sh	/^function _create_nfs_share() {$/;"	f
_curl	scripts/lib/system.sh	/^function _curl() {$/;"	f
_default_cluster_provider	scripts/lib/system.sh	/^function _default_cluster_provider() {$/;"	f
_delete_k8s_resources	scripts/plugins/azure.sh	/^function _delete_k8s_resources() {$/;"	f
_delete_sp_and_app	scripts/plugins/azure.sh	/^function _delete_sp_and_app() {$/;"	f
_deploy_jenkins	scripts/plugins/jenkins.sh	/^function _deploy_jenkins() {$/;"	f
_deploy_jenkins_image	scripts/plugins/jenkins.sh	/^function _deploy_jenkins_image() {$/;"	f
_deploy_k3s_cluster	scripts/lib/core.sh	/^function _deploy_k3s_cluster() {$/;"	f
_deploy_vault_ha	scripts/plugins/vault.sh	/^function _deploy_vault_ha() {$/;"	f
_enable_kv2_k8s_auth	scripts/plugins/vault.sh	/^function _enable_kv2_k8s_auth() {$/;"	f
_ensure_azure_cli	scripts/plugins/azure.sh	/^function _ensure_azure_cli() {$/;"	f
_ensure_bats	scripts/lib/system.sh	/^function _ensure_bats() {$/;"	f
_ensure_cargo	scripts/lib/system.sh	/^function _ensure_cargo() {$/;"	f
_ensure_cluster_provider	scripts/lib/system.sh	/^function _ensure_cluster_provider() {$/;"	f
_ensure_jenkins_cert	scripts/plugins/jenkins.sh	/^function _ensure_jenkins_cert() {$/;"	f
_ensure_namespace	scripts/plugins/azure.sh	/^function _ensure_namespace() {$/;"	f
_ensure_path_exists	scripts/lib/core.sh	/^function _ensure_path_exists() {$/;"	f
_ensure_port_available	scripts/lib/core.sh	/^function _ensure_port_available() {$/;"	f
_ensure_secret_tool	scripts/lib/system.sh	/^_ensure_secret_tool() {$/;"	f
_err	scripts/lib/system.sh	/^function _err() { printf 'ERROR: %s\\n' "$*" >&2; exit 127; }$/;"	f
_eso_akv_down	scripts/plugins/azure.sh	/^function _eso_akv_down() {$/;"	f
_eso_akv_up	scripts/plugins/azure.sh	/^function _eso_akv_up() {$/;"	f
_failfast_off	scripts/lib/system.sh	/^function _failfast_off() {$/;"	f
_failfast_on	scripts/lib/system.sh	/^function _failfast_on() {$/;"	f
_find_latest_app_for_kv	scripts/plugins/azure.sh	/^function _find_latest_app_for_kv() {$/;"	f
_get_bw_access_token	scripts/plugins/bitwarden.sh	/^function _get_bw_access_token() {$/;"	f
_grant_kv_access	scripts/plugins/azure.sh	/^function _grant_kv_access() {$/;"	f
_helm	scripts/lib/system.sh	/^function _helm() {$/;"	f
_helm	scripts/tests/test_helpers.bash	/^  _helm() {$/;"	f
_info	scripts/lib/system.sh	/^function _info() { printf 'INFO: %s\\n' "$*" >&2; }$/;"	f
_info	scripts/plugins/vault.sh	/^command -v _info >\/dev\/null 2>&1 || _info() { printf '%s\\n' "$*" >&2; }$/;"	f
_install_azure_eso	scripts/plugins/azure.sh	/^function _install_azure_eso() {$/;"	f
_install_bats_from_source	scripts/lib/system.sh	/^function _install_bats_from_source() {$/;"	f
_install_bws	scripts/plugins/bitwarden.sh	/^function _install_bws() {$/;"	f
_install_colima	scripts/lib/system.sh	/^function _install_colima() {$/;"	f
_install_debian_docker	scripts/lib/system.sh	/^function _install_debian_docker() {$/;"	f
_install_debian_helm	scripts/lib/system.sh	/^function _install_debian_helm() {$/;"	f
_install_debian_kubernetes_client	scripts/lib/system.sh	/^function _install_debian_kubernetes_client() {$/;"	f
_install_docker	scripts/lib/core.sh	/^function _install_docker() {$/;"	f
_install_helm	scripts/lib/system.sh	/^function _install_helm() {$/;"	f
_install_istioctl	scripts/lib/core.sh	/^function _install_istioctl() {$/;"	f
_install_k3d	scripts/lib/core.sh	/^function _install_k3d() {$/;"	f
_install_k3s	scripts/lib/core.sh	/^function _install_k3s() {$/;"	f
_install_kubernetes_cli	scripts/lib/system.sh	/^function _install_kubernetes_cli() {$/;"	f
_install_mac_docker	scripts/lib/system.sh	/^function _install_mac_docker() {$/;"	f
_install_mac_helm	scripts/lib/system.sh	/^function _install_mac_helm() {$/;"	f
_install_redhat_docker	scripts/lib/system.sh	/^function _install_redhat_docker() {$/;"	f
_install_redhat_helm	scripts/lib/system.sh	/^function _install_redhat_helm() {$/;"	f
_install_redhat_kubernetes_client	scripts/lib/system.sh	/^function _install_redhat_kubernetes_client() {$/;"	f
_install_smb_csi_driver	scripts/lib/core.sh	/^function _install_smb_csi_driver() {$/;"	f
_ip	scripts/lib/system.sh	/^function _ip() {$/;"	f
_is_debian_family	scripts/lib/system.sh	/^function _is_debian_family() {$/;"	f
_is_linux	scripts/lib/system.sh	/^function _is_linux() {$/;"	f
_is_mac	scripts/lib/system.sh	/^function _is_mac() {$/;"	f
_is_redhat_family	scripts/lib/system.sh	/^function _is_redhat_family() {$/;"	f
_is_same_token	scripts/lib/system.sh	/^function _is_same_token() {$/;"	f
_is_vault_deployed	scripts/plugins/vault.sh	/^function _is_vault_deployed() {$/;"	f
_is_vault_health	scripts/plugins/vault.sh	/^function _is_vault_health() {$/;"	f
_is_vault_pki_mounted	scripts/plugins/vault.sh	/^function _is_vault_pki_mounted() {$/;"	f
_is_vault_pki_ready	scripts/plugins/vault.sh	/^function _is_vault_pki_ready() {$/;"	f
_is_wsl	scripts/lib/system.sh	/^function _is_wsl() {$/;"	f
_istioctl	scripts/lib/system.sh	/^function _istioctl() {$/;"	f
_jenkins_capture_trap_state	scripts/plugins/jenkins.sh	/^function _jenkins_capture_trap_state() {$/;"	f
_jenkins_cleanup_and_return	scripts/plugins/jenkins.sh	/^function _jenkins_cleanup_and_return() {$/;"	f
_jenkins_cleanup_rendered_manifests	scripts/plugins/jenkins.sh	/^function _jenkins_cleanup_rendered_manifests() {$/;"	f
_jenkins_configure_leaf_host_defaults	scripts/plugins/jenkins.sh	/^function _jenkins_configure_leaf_host_defaults() {$/;"	f
_jenkins_detect_cluster_name	scripts/plugins/jenkins.sh	/^function _jenkins_detect_cluster_name() {$/;"	f
_jenkins_detect_node_ip	scripts/plugins/jenkins.sh	/^function _jenkins_detect_node_ip() {$/;"	f
_jenkins_node_has_mount	scripts/plugins/jenkins.sh	/^function _jenkins_node_has_mount() {$/;"	f
_jenkins_provider_is_k3s	scripts/plugins/jenkins.sh	/^function _jenkins_provider_is_k3s() {$/;"	f
_jenkins_register_rendered_manifest	scripts/plugins/jenkins.sh	/^function _jenkins_register_rendered_manifest() {$/;"	f
_jenkins_require_hostpath_mounts	scripts/plugins/jenkins.sh	/^function _jenkins_require_hostpath_mounts() {$/;"	f
_jenkins_run_saved_trap_literal	scripts/plugins/jenkins.sh	/^function _jenkins_run_saved_trap_literal() {$/;"	f
_jenkins_running_on_wsl	scripts/plugins/jenkins.sh	/^function _jenkins_running_on_wsl() {$/;"	f
_jenkins_warn_on_cert_rotator_pull_failure	scripts/plugins/jenkins.sh	/^function _jenkins_warn_on_cert_rotator_pull_failure() {$/;"	f
_k3d	scripts/lib/system.sh	/^function _k3d() {$/;"	f
_k3d_cluster_exist	scripts/lib/system.sh	/^function _k3d_cluster_exist() {$/;"	f
_k3s_asset_dir	scripts/lib/core.sh	/^function _k3s_asset_dir() {$/;"	f
_k3s_cluster_exists	scripts/lib/core.sh	/^function _k3s_cluster_exists() {$/;"	f
_k3s_detect_ip	scripts/lib/core.sh	/^function _k3s_detect_ip() {$/;"	f
_k3s_prepare_assets	scripts/lib/core.sh	/^function _k3s_prepare_assets() {$/;"	f
_k3s_render_template	scripts/lib/core.sh	/^function _k3s_render_template() {$/;"	f
_k3s_stage_file	scripts/lib/core.sh	/^function _k3s_stage_file() {$/;"	f
_k3s_template_path	scripts/lib/core.sh	/^function _k3s_template_path() {$/;"	f
_kill	scripts/lib/system.sh	/^function _kill() {$/;"	f
_kubectl	scripts/lib/system.sh	/^function _kubectl() {$/;"	f
_kubectl	scripts/tests/test_helpers.bash	/^  _kubectl() {$/;"	f
_list_k3d_cluster	scripts/lib/system.sh	/^function _list_k3d_cluster() {$/;"	f
_load_plugin_function	scripts/lib/system.sh	/^function _load_plugin_function() {$/;"	f
_lookup_bw_access_token	scripts/plugins/bitwarden.sh	/^function _lookup_bw_access_token() {$/;"	f
_mount_vault_immediate_sc	scripts/plugins/vault.sh	/^function _mount_vault_immediate_sc() {$/;"	f
_no_trace	scripts/lib/system.sh	/^function _no_trace() {$/;"	f
_no_trace	scripts/plugins/jenkins.sh	/^command -v _no_trace >\/dev\/null 2>&1 || _no_trace() { "$@"; }$/;"	f
_provider_k3d_apply_cluster_config	scripts/lib/providers/k3d.sh	/^function _provider_k3d_apply_cluster_config() {$/;"	f
_provider_k3d_cluster_exists	scripts/lib/providers/k3d.sh	/^function _provider_k3d_cluster_exists() {$/;"	f
_provider_k3d_configure_istio	scripts/lib/providers/k3d.sh	/^function _provider_k3d_configure_istio() {$/;"	f
_provider_k3d_create_cluster	scripts/lib/providers/k3d.sh	/^function _provider_k3d_create_cluster() {$/;"	f
_provider_k3d_deploy_cluster	scripts/lib/providers/k3d.sh	/^function _provider_k3d_deploy_cluster() {$/;"	f
_provider_k3d_destroy_cluster	scripts/lib/providers/k3d.sh	/^function _provider_k3d_destroy_cluster() {$/;"	f
_provider_k3d_exec	scripts/lib/providers/k3d.sh	/^function _provider_k3d_exec() {$/;"	f
_provider_k3d_install	scripts/lib/providers/k3d.sh	/^function _provider_k3d_install() {$/;"	f
_provider_k3d_list_clusters	scripts/lib/providers/k3d.sh	/^function _provider_k3d_list_clusters() {$/;"	f
_provider_k3s_apply_cluster_config	scripts/lib/providers/k3s.sh	/^function _provider_k3s_apply_cluster_config() {$/;"	f
_provider_k3s_cluster_exists	scripts/lib/providers/k3s.sh	/^function _provider_k3s_cluster_exists() {$/;"	f
_provider_k3s_configure_istio	scripts/lib/providers/k3s.sh	/^function _provider_k3s_configure_istio() {$/;"	f
_provider_k3s_create_cluster	scripts/lib/providers/k3s.sh	/^function _provider_k3s_create_cluster() {$/;"	f
_provider_k3s_deploy_cluster	scripts/lib/providers/k3s.sh	/^function _provider_k3s_deploy_cluster() {$/;"	f
_provider_k3s_destroy_cluster	scripts/lib/providers/k3s.sh	/^function _provider_k3s_destroy_cluster() {$/;"	f
_provider_k3s_exec	scripts/lib/providers/k3s.sh	/^function _provider_k3s_exec() {$/;"	f
_provider_k3s_install	scripts/lib/providers/k3s.sh	/^function _provider_k3s_install() {$/;"	f
_provider_k3s_list_clusters	scripts/lib/providers/k3s.sh	/^function _provider_k3s_list_clusters() {$/;"	f
_remove_role_assignments_for	scripts/plugins/azure.sh	/^function _remove_role_assignments_for() {$/;"	f
_run_command	scripts/lib/system.sh	/^function _run_command() {$/;"	f
_run_command	scripts/tests/test_helpers.bash	/^  _run_command() {$/;"	f
_secret_tool	scripts/lib/system.sh	/^function _secret_tool() {$/;"	f
_security	scripts/lib/system.sh	/^function _security() {$/;"	f
_sha256_12	scripts/lib/system.sh	/^function _sha256_12() {$/;"	f
_start_k3s_service	scripts/lib/core.sh	/^function _start_k3s_service() {$/;"	f
_sudo_available	scripts/lib/system.sh	/^function _sudo_available() {$/;"	f
_sync_vault_jenkins_admin	scripts/plugins/jenkins.sh	/^function _sync_vault_jenkins_admin() {$/;"	f
_systemd_available	scripts/lib/system.sh	/^function _systemd_available() {$/;"	f
_systemd_available	scripts/tests/test_helpers.bash	/^  _systemd_available() { return 0; }$/;"	f
_teardown_k3s_cluster	scripts/lib/core.sh	/^function _teardown_k3s_cluster() {$/;"	f
_test_lib_capture_vault_default	scripts/lib/test.sh	/^_test_lib_capture_vault_default() {$/;"	f
_test_lib_refresh_vault_default_snapshot	scripts/lib/test.sh	/^_test_lib_refresh_vault_default_snapshot() {$/;"	f
_try_load_plugin	scripts/lib/system.sh	/^function _try_load_plugin() {$/;"	f
_update_k8s_secret	scripts/plugins/azure.sh	/^function _update_k8s_secret() {$/;"	f
_usage	scripts/lib/help/utils.sh	/^function _usage() {$/;"	f
_vault_bootstrap_ha	scripts/plugins/vault.sh	/^function _vault_bootstrap_ha() {$/;"	f
_vault_enable_pki	scripts/plugins/vault.sh	/^function _vault_enable_pki() {$/;"	f
_vault_ensure_pki_root_ca	scripts/plugins/vault.sh	/^function _vault_ensure_pki_root_ca() {$/;"	f
_vault_exec	scratch/vault_exec.sh	/^function _vault_exec() {$/;"	f
_vault_exec	scripts/plugins/vault.sh	/^function _vault_exec() {$/;"	f
_vault_issue_pki_tls_secret	scripts/plugins/vault.sh	/^function _vault_issue_pki_tls_secret() {$/;"	f
_vault_login	scripts/plugins/vault.sh	/^function _vault_login() {$/;"	f
_vault_normalize_serial_hex_pairs	scripts/lib/vault_pki.sh	/^function _vault_normalize_serial_hex_pairs() {$/;"	f
_vault_ns_ensure	scripts/plugins/vault.sh	/^function _vault_ns_ensure() {$/;"	f
_vault_pki_config_urls	scripts/plugins/vault.sh	/^function _vault_pki_config_urls() {$/;"	f
_vault_pki_extract_certificate_serial	scripts/etc/jenkins/cert-rotator.sh	/^function _vault_pki_extract_certificate_serial() {$/;"	f
_vault_pki_extract_certificate_serial	scripts/lib/vault_pki.sh	/^function _vault_pki_extract_certificate_serial() {$/;"	f
_vault_pki_issue_tls_secret	scripts/plugins/vault.sh	/^function _vault_pki_issue_tls_secret() {$/;"	f
_vault_pki_revoke_certificate_serial	scripts/etc/jenkins/cert-rotator.sh	/^function _vault_pki_revoke_certificate_serial() {$/;"	f
_vault_pki_revoke_certificate_serial	scripts/lib/vault_pki.sh	/^function _vault_pki_revoke_certificate_serial() {$/;"	f
_vault_policy_exists	scripts/plugins/vault.sh	/^function _vault_policy_exists() {$/;"	f
_vault_portforward_help	scripts/plugins/vault.sh	/^function _vault_portforward_help() {$/;"	f
_vault_post_revoke_request	scripts/plugins/vault.sh	/^function _vault_post_revoke_request() {$/;"	f
_vault_repo_setup	scripts/plugins/vault.sh	/^function _vault_repo_setup() {$/;"	f
_vault_set_eso_init_jenkins_writer	scripts/plugins/vault.sh	/^function _vault_set_eso_init_jenkins_writer() {$/;"	f
_vault_set_eso_reader	scripts/plugins/vault.sh	/^function _vault_set_eso_reader() {$/;"	f
_vault_set_eso_writer	scripts/plugins/vault.sh	/^function _vault_set_eso_writer() {$/;"	f
_vault_setup_pki	scripts/plugins/vault.sh	/^function _vault_setup_pki() {$/;"	f
_vault_upsert_pki_role	scripts/plugins/vault.sh	/^function _vault_upsert_pki_role() {$/;"	f
_vault_wait_ready	scripts/plugins/vault.sh	/^function _vault_wait_ready() {$/;"	f
_version_ge	scripts/lib/system.sh	/^function _version_ge() {$/;"	f
_vs_hosts_split=	scripts/plugins/jenkins.sh	/^   local -a _vs_hosts_split=()$/;"	f
_wait_for_jenkins_ready	scripts/plugins/jenkins.sh	/^function _wait_for_jenkins_ready() {$/;"	f
_wait_for_port_forward	scripts/lib/test.sh	/^function _wait_for_port_forward() {$/;"	f
_warn	scripts/lib/system.sh	/^function _warn() { printf 'WARN: %s\\n' "$*" >&2; }$/;"	f
_warn	scripts/plugins/vault.sh	/^command -v _warn >\/dev\/null 2>&1 || _warn() { printf '%s\\n' "$*" >&2; }$/;"	f
`_run_command` helper	README.md	/^### `_run_command` helper$/;"	S	section:k3d-manager""Writing a plugin
apply	scripts/tools/update_ensure_bats.py	/^def apply(target: Path) -> None:$/;"	f	typeref:typename:None
apply_secret	scripts/etc/jenkins/cert-rotator.sh	/^function apply_secret() {$/;"	f
args=	scripts/plugins/vault.sh	/^   local args=()$/;"	f
bats_args=	scripts/lib/help/utils.sh	/^    local -a bats_args=()$/;"	f
clusters=	scripts/plugins/jenkins.sh	/^   local -a clusters=()$/;"	f
config_bws_eso	scripts/plugins/bitwarden.sh	/^function config_bws_eso() {$/;"	f
create_az_sp	scripts/plugins/azure.sh	/^function create_az_sp() {$/;"	f
create_cluster	scripts/lib/core.sh	/^function create_cluster() {$/;"	f
create_k3d_cluster	scripts/lib/core.sh	/^function create_k3d_cluster() {$/;"	f
create_k3s_cluster	scripts/lib/core.sh	/^function create_k3s_cluster() {$/;"	f
deploy_azure_eso	scripts/plugins/azure.sh	/^function deploy_azure_eso() {$/;"	f
deploy_cluster	scripts/lib/core.sh	/^function deploy_cluster() {$/;"	f
deploy_eso	scripts/plugins/eso.sh	/^function deploy_eso() {$/;"	f
deploy_jenkins	scripts/plugins/jenkins.sh	/^function deploy_jenkins() {$/;"	f
deploy_k3d_cluster	scripts/lib/core.sh	/^function deploy_k3d_cluster() {$/;"	f
deploy_k3s_cluster	scripts/lib/core.sh	/^function deploy_k3s_cluster() {$/;"	f
deploy_vault	scripts/plugins/vault.sh	/^function deploy_vault() {$/;"	f
destroy_cluster	scripts/lib/core.sh	/^function destroy_cluster() {$/;"	f
destroy_k3d_cluster	scripts/lib/core.sh	/^function destroy_k3d_cluster() {$/;"	f
destroy_k3s_cluster	scripts/lib/core.sh	/^function destroy_k3s_cluster() {$/;"	f
discover_kubectl	scripts/etc/jenkins/cert-rotator.sh	/^function discover_kubectl() {$/;"	f
ensure_bws_secret	scripts/plugins/bitwarden.sh	/^function ensure_bws_secret() {$/;"	f
envsubst	scripts/tests/test_helpers.bash	/^  envsubst() { command envsubst "$@"; }$/;"	f
eso_akv	scripts/plugins/azure.sh	/^function eso_akv() {$/;"	f
eso_example_by_uuid	scripts/plugins/bitwarden.sh	/^function eso_example_by_uuid() {$/;"	f
expand_kubectl_entry	scripts/etc/jenkins/cert-rotator.sh	/^function expand_kubectl_entry() {$/;"	f
expand_search_entry	scripts/etc/jenkins/cert-rotator.sh	/^function expand_search_entry() {$/;"	f
export_stubs	scripts/tests/test_helpers.bash	/^function export_stubs() {$/;"	f
extra_suites=	scripts/lib/help/utils.sh	/^        local -a extra_suites=()$/;"	f
extract_common_name	scripts/etc/jenkins/cert-rotator.sh	/^function extract_common_name() {$/;"	f
extract_dns_sans	scripts/etc/jenkins/cert-rotator.sh	/^function extract_dns_sans() {$/;"	f
handler_args=	scripts/plugins/jenkins.sh	/^      local -a handler_args=()$/;"	f
handler_args=	scripts/plugins/jenkins.sh	/^   local -a handler_args=()$/;"	f
hello	scripts/plugins/hello.sh	/^function hello() {$/;"	f
init_test_env	scripts/tests/test_helpers.bash	/^function init_test_env() {$/;"	f
join_by	scripts/etc/jenkins/cert-rotator.sh	/^function join_by() {$/;"	f
k3d-manager	README.md	/^# k3d-manager$/;"	c
k3s backend (bare-metal installations)	README.md	/^## k3s backend (bare-metal installations)$/;"	s	chapter:k3d-manager
kflags=	scripts/plugins/vault.sh	/^  local kflags=()$/;"	f
load_secret_certificate	scripts/etc/jenkins/cert-rotator.sh	/^function load_secret_certificate() {$/;"	f
log	scripts/etc/jenkins/cert-rotator.sh	/^function log() {$/;"	f
main	scripts/etc/jenkins/cert-rotator.sh	/^function main() {$/;"	f
main	scripts/tools/update_ensure_bats.py	/^def main() -> None:$/;"	f	typeref:typename:None
mint_certificate	scripts/etc/jenkins/cert-rotator.sh	/^function mint_certificate() {$/;"	f
missing_nodes=	scripts/plugins/jenkins.sh	/^   local -a missing_nodes=()$/;"	f
normalize_serial	scripts/etc/jenkins/cert-rotator.sh	/^function normalize_serial() {$/;"	f
positional=	scripts/lib/core.sh	/^   local -a positional=()$/;"	f
positional=	scripts/lib/help/utils.sh	/^    local -a positional=()$/;"	f
pre=	scripts/lib/providers/k3d.sh	/^   local pre=()$/;"	f
pre=	scripts/lib/providers/k3s.sh	/^   local pre=()$/;"	f
pre=	scripts/lib/system.sh	/^  local pre=() ;$/;"	f
pre=	scripts/lib/system.sh	/^  local pre=()$/;"	f
probe_args=	scripts/lib/system.sh	/^  local -a probe_args=()$/;"	f
read_lines	scripts/tests/test_helpers.bash	/^function read_lines() {$/;"	f
require_cmd	scripts/etc/jenkins/cert-rotator.sh	/^function require_cmd() {$/;"	f
require_env	scripts/etc/jenkins/cert-rotator.sh	/^function require_env() {$/;"	f
resolve_kubectl_entry	scripts/etc/jenkins/cert-rotator.sh	/^function resolve_kubectl_entry() {$/;"	f
sans=	scripts/etc/jenkins/cert-rotator.sh	/^   local -a sans=()$/;"	f
saved_tokens=	scripts/plugins/jenkins.sh	/^   local -a saved_tokens=()$/;"	f
search_entries=	scripts/etc/jenkins/cert-rotator.sh	/^   local -a search_entries=()$/;"	f
seconds_until_expiry	scripts/etc/jenkins/cert-rotator.sh	/^function seconds_until_expiry() {$/;"	f
selected_tests=	scripts/lib/help/utils.sh	/^    local -a selected_tests=()$/;"	f
stub_envsubst	scripts/tests/test_helpers.bash	/^function stub_envsubst() {$/;"	f
stub_helm	scripts/tests/test_helpers.bash	/^function stub_helm() {$/;"	f
stub_kubectl	scripts/tests/test_helpers.bash	/^function stub_kubectl() {$/;"	f
stub_run_command	scripts/tests/test_helpers.bash	/^function stub_run_command() {$/;"	f
suite_labels=	scripts/lib/help/utils.sh	/^    local -a suite_labels=()$/;"	f
synopsis_tokens=	scripts/lib/help/utils.sh	/^        local -a synopsis_tokens=()$/;"	f
test	scripts/lib/help/utils.sh	/^function test() {$/;"	f
test_eso	scripts/lib/test.sh	/^function test_eso() {$/;"	f
test_istio	scripts/lib/test.sh	/^function test_istio() {$/;"	f
test_jenkins	scripts/lib/test.sh	/^function test_jenkins() {$/;"	f
test_nfs_connectivity	scripts/lib/test.sh	/^function test_nfs_connectivity() {$/;"	f
test_nfs_direct	scripts/lib/test.sh	/^function test_nfs_direct() {$/;"	f
test_vault	scripts/lib/test.sh	/^function test_vault() {$/;"	f
tests=	scripts/lib/help/utils.sh	/^    local -a tests=()$/;"	f
trap_args=	scripts/plugins/jenkins.sh	/^         trap_args=()$/;"	f
vault_api_request	scripts/etc/jenkins/cert-rotator.sh	/^function vault_api_request() {$/;"	f
vault_login	scripts/etc/jenkins/cert-rotator.sh	/^function vault_login() {$/;"	f
verify_bws_token	scripts/plugins/bitwarden.sh	/^function verify_bws_token() {$/;"	f
vs_hosts_lines=	scripts/plugins/jenkins.sh	/^   local -a vs_hosts_lines=()$/;"	f
workload_nodes=	scripts/plugins/jenkins.sh	/^   local -a workload_nodes=()$/;"	f
